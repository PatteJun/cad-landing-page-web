---
import { content } from '../store/language';
const initialContent = content.get();
---

<section id="contact" class="bg-white">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-24 sm:py-32">
      <div class="mx-auto max-w-2xl text-center">
        <h2 class="text-4xl font-bold tracking-tight text-text-primary sm:text-5xl" id="contact-title">{initialContent.contactForm.title}</h2>
        <p class="mt-4 text-lg text-text-secondary" id="contact-subtitle">
          {initialContent.contactForm.subtitle}
        </p>
      </div>

      {/* Success message - hidden by default */}
      <div id="success-message" class="hidden mx-auto mt-16 max-w-xl sm:mt-20 bg-green-50 p-8 rounded-lg text-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-green-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 class="text-xl font-semibold text-green-800 mb-2">Thank you for your interest!</h3>
        <p class="text-green-700">We have received your information and will contact you shortly.</p>
      </div>

      <form 
        name="contact"
        method="POST"
        data-netlify="true"
        netlify-honeypot="bot-field"
        class="mx-auto mt-16 max-w-xl sm:mt-20"
        id="contact-form"
      >
        {/* Hidden field for netlify */}
        <input type="hidden" name="form-name" value="contact" />
        
        {/* Honeypot field */}
        <p class="hidden">
          <label>
            Don't fill this out if you're human: <input name="bot-field" />
          </label>
        </p>

        <div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2">
          <div class="sm:col-span-2">
            <label for="name" class="block text-sm font-semibold text-text-primary" id="name-label">{initialContent.contactForm.fields.name.label}</label>
            <div class="mt-2.5">
              <input
                type="text"
                name="name"
                id="name"
                required
                placeholder={initialContent.contactForm.fields.name.placeholder}
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
            </div>
          </div>
          <div class="sm:col-span-2">
            <label for="company" class="block text-sm font-semibold text-text-primary" id="company-label">{initialContent.contactForm.fields.company.label}</label>
            <div class="mt-2.5">
              <input
                type="text"
                name="company"
                id="company"
                required
                placeholder={initialContent.contactForm.fields.company.placeholder}
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
            </div>
          </div>
          <div class="sm:col-span-2">
            <label for="role" class="block text-sm font-semibold text-text-primary" id="role-label">{initialContent.contactForm.fields.role.label}</label>
            <div class="mt-2.5">
              <select
                id="role"
                name="role"
                required
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
                <option value="">{initialContent.contactForm.fields.role.placeholder}</option>
                {initialContent.contactForm.fields.role.options.map((option) => (
                  <option value={option.value}>{option.label}</option>
                ))}
              </select>
            </div>
          </div>
          <div>
            <label for="email" class="block text-sm font-semibold text-text-primary" id="email-label">{initialContent.contactForm.fields.email.label}</label>
            <div class="mt-2.5">
              <input
                type="email"
                name="email"
                id="email"
                required
                placeholder={initialContent.contactForm.fields.email.placeholder}
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
            </div>
          </div>
          <div>
            <label for="phone" class="block text-sm font-semibold text-text-primary" id="phone-label">{initialContent.contactForm.fields.phone.label}</label>
            <div class="mt-2.5">
              <input
                type="tel"
                name="phone"
                id="phone"
                required
                placeholder={initialContent.contactForm.fields.phone.placeholder}
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
            </div>
          </div>
          <div class="sm:col-span-2">
            <label for="source" class="block text-sm font-semibold text-text-primary" id="source-label">{initialContent.contactForm.fields.source.label}</label>
            <div class="mt-2.5">
              <select
                id="source"
                name="source"
                required
                class="block w-full rounded-md border-gray-300 px-3.5 py-2 text-text-primary shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-primary"
              >
                <option value="">{initialContent.contactForm.fields.source.placeholder}</option>
                {initialContent.contactForm.fields.source.options.map((option) => (
                  <option value={option.value}>{option.label}</option>
                ))}
              </select>
            </div>
          </div>
          <div class="sm:col-span-2">
            <div class="flex gap-x-4">
              <div class="flex h-6 items-center">
                <input
                  id="privacy"
                  name="privacy"
                  type="checkbox"
                  required
                  class="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary"
                >
              </div>
              <label for="privacy" class="text-sm text-text-secondary" id="privacy-label">
                <span id="privacy-text">{initialContent.contactForm.privacy.text}</span>
                <a 
                  href="https://www.carauktion.ch/generalinfo/service/dataprotectionregulation.html" 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  class="font-semibold text-primary hover:text-red-700" 
                  id="privacy-link"
                >{initialContent.contactForm.privacy.linkText}</a>
                <span id="privacy-additional">{initialContent.contactForm.privacy.additionalText}</span>
              </label>
            </div>
          </div>
        </div>
        <div class="mt-10">
          <button
            type="submit"
            class="block w-full rounded-md bg-primary px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-red-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary transition-colors"
            id="submit-button"
          >
            {initialContent.contactForm.submitButton}
          </button>
        </div>
      </form>
    </div>
</section>

<script>
  import { content } from '../store/language';

  // Handle form submission
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const successMessage = document.getElementById('success-message');

  if (form && successMessage) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      try {
        const formData = new FormData(form);
        await fetch('/', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: new URLSearchParams(formData as any).toString()
        });
        
        // Hide form and show success message
        form.style.display = 'none';
        successMessage.classList.remove('hidden');
        
        // Reset form
        form.reset();
      } catch (error) {
        console.error('Error submitting form:', error);
      }
    });
  }

  // Update form content when language changes
  content.subscribe(newContent => {
    // Update form title and subtitle
    document.getElementById('contact-title')!.textContent = newContent.contactForm.title;
    document.getElementById('contact-subtitle')!.textContent = newContent.contactForm.subtitle;

    // Update field labels and placeholders
    const fields = ['name', 'company', 'role', 'email', 'phone', 'source'];
    fields.forEach(field => {
      const label = document.getElementById(`${field}-label`);
      const input = document.getElementById(field);
      if (label) {
        label.textContent = newContent.contactForm.fields[field].label;
      }
      if (input) {
        input.placeholder = newContent.contactForm.fields[field].placeholder;
      }
    });

    // Update select options
    ['role', 'source'].forEach(selectId => {
      const select = document.getElementById(selectId);
      if (select) {
        const options = select.getElementsByTagName('option');
        options[0].textContent = newContent.contactForm.fields[selectId].placeholder;
        newContent.contactForm.fields[selectId].options.forEach((option, index) => {
          if (options[index + 1]) {
            options[index + 1].textContent = option.label;
          }
        });
      }
    });

    // Update privacy text
    document.getElementById('privacy-text')!.textContent = newContent.contactForm.privacy.text;
    document.getElementById('privacy-link')!.textContent = newContent.contactForm.privacy.linkText;
    document.getElementById('privacy-additional')!.textContent = newContent.contactForm.privacy.additionalText;

    // Update submit button
    document.getElementById('submit-button')!.textContent = newContent.contactForm.submitButton;
  });
</script>